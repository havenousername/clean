.comp 920 0101110100100
.start __hw02_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_hw02 "hw02"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.implab e_StdList_s++
.implab e_StdList_sreverse
.implab e_StdList_s==;85
.impmod StdInt
.implab e_StdInt_s/;10
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impdesc e_StdInt_drem;28
.implab e_StdInt_nrem;28
.export __hw02_Start
.o 0 0
__hw02_Start
	build _ 0 n7
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n7
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea7
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea7
.o 0 0
s7
	pushI 733337
.d 0 1 i
	jmp s6
.o 0 1 i
s6
	pushI 0
	push_b 1
	ltI
	jmp_false else.1
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
else.1
	create
	push_b 0
.d 1 1 i
	jsr s5
.o 1 0
	create
	push_b 0
	updatepop_b 0 1
.d 1 1 i
	jsr s5
.o 1 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr e_StdList_sreverse
.o 1 0
.d 2 0
	jmp e_StdList_s==;85
.o 1 1 i
s5
	pushI 0
	push_b 1
	eqI
	jmp_false else.2
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
else.2
	buildh _Nil 0
	buildI 10
	buildI_b 0
	build _ 2 e_StdInt_nrem;28
	buildh _Cons 2
	pushI 10
	push_b 1
	divI
	create
	updatepop_b 0 1
.d 1 1 i
	jsr s5
.o 1 0
.d 3 0
	jmp e_StdList_s++
