.comp 920 0101110100100
.start __stream2_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_stream2 "stream2"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.implab e_StdList_stakeWhile
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_s+;6
.implab e_StdInt_n+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export __stream2_Start
.o 0 0
__stream2_Start
	build _ 0 n7
.d 1 0
	jmp _driver
.n 0 _ ea7
.o 1 0
n7
	push_node _cycle_in_spine 0
.o 1 0
ea7
.o 1 0
s7
	buildI 3875820019684212636
.d 2 0
	jmp s6
.o 2 0
s6
	create
	buildI 1
.d 2 0
	jsr s10
.o 1 0
	push_a 1
	buildh d12 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp e_StdList_stakeWhile
.desc d12 _hnf l12 2 0 ">=;11"
.a 0 a12
.o 2 0
l12
	repl_args 1 1
.o 2 0
a12
.d 2 0
	jsr ea12
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea12
	jsr_eval 1
	pushI_a 1
	pushI_a 0
	pop_a 2
.o 0 2 ii
s12
	push_b 1
	push_b 1
	ltI
	updatepop_b 0 2
	notB
.d 0 1 b
	rtn
.n 1 _ ea10
.o 1 0
n10
	push_node _cycle_in_spine 1
.o 2 0
ea10
.o 2 0
s10
	push_a 0
	build _ 1 n16
	build _ 1 n10
	push_a 1
	build _ 1 n4
	fillh _Cons 2 3
	pop_a 1
.d 1 0
	rtn
.n 1 _ ea16
.o 1 0
n16
	push_node _cycle_in_spine 1
.o 2 0
ea16
.o 2 0
s16
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.n 1 _
.o 1 0
n4
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea4
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea4
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
s4
	buildI 1
	buildI 0
	push_b 0
	updatepop_b 0 1
.d 2 1 i
	jmp s5
.o 2 1 i
s5
	pushI 0
	push_b 1
	eqI
	jmp_false else.1
	pop_b 1
	jsr_eval 0
	pushI_a 0
	pop_a 2
.d 0 1 i
	rtn
else.1
	push_a 1
	push_a 1
	build _ 2 e_StdInt_n+;6
	pushI 1
	push_b 1
	subI
	push_a 2
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 1
.d 2 1 i
	jmp s5
