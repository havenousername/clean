.comp 920 0101110100100
.start __progress06_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_progress06 "progress06"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s^;12
.implab e_StdInt_s==;16
.export __progress06_Start
.o 0 0
__progress06_Start
	build _ 0 n2
.d 1 0
	jmp _driver
.n 0 _ ea2
.o 1 0
n2
	push_node _cycle_in_spine 0
.o 1 0
ea2
.o 1 0
s2
	buildh _Nil 0
	buildI 20
	buildI 10
	buildI 9
	buildh _Tuple 3
	buildh _Cons 2
	buildI 4
	buildI 3
	buildI 2
	buildh _Tuple 3
	buildh _Cons 2
	buildI 1
	buildI 1
	buildI 1
	buildh _Tuple 3
	buildh _Cons 2
.d 2 0
	jmp s1
.o 2 0
s1
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp s3
.n 1 _ ea3
.o 1 0
n3
	push_node _cycle_in_spine 1
.o 2 0
ea3
	jsr_eval 0
.o 2 0
s3
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp s5
.o 2 0
s5
	eq_desc _Cons 2 0
	jmp_true case.1
	jmp case.2
case.1
	repl_args 2 2
	push_a 0
	jsr_eval 0
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 2
	pushI_a 1
	pushI_a 0
	pop_a 3
	push_a 1
	updatepop_a 0 2
.d 2 3 iii
	jmp s4
case.2
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.o 2 3 iii
s4
case.3
	pushI 2
	push_b 3
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 2
	push_b 3
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 2
	push_b 3
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	addI
	eqI
	jmp_false else.5
	push_a 0
	build _ 1 n3
	buildI_b 2
	buildI_b 1
	buildI_b 0
	buildh _Tuple 3
	fillh _Cons 2 3
	pop_a 1
	pop_b 3
.d 1 0
	rtn
else.5
	jmp case.4
case.4
	push_a 0
	jsr_eval 0
	updatepop_a 0 1
	pop_b 3
.d 2 0
	jmp s3
